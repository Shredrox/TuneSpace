name: .NET Backend CI/CD

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/dotnet.yml"
  pull_request:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/dotnet.yml"

env:
  DOTNET_VERSION: "9.0.x"
  SOLUTION_PATH: "./backend/TuneSpace.sln"
  BUILD_CONFIGURATION: "Release"
  PUBLISH_PATH: "./backend/publish"
  Jwt__Secret: ${{ secrets.JWT_SECRET }}
  ConnectionStrings__DefaultConnection: ${{ secrets.DEFAULT_CONNECTION_STRING }}

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: ankane/pgvector
        env:
          POSTGRES_DB: tunespace_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install EF Core CLI
        run: dotnet tool install --global dotnet-ef

      - name: Restore NuGet packages
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

      - name: Apply EF Core Migrations
        run: dotnet ef database update --project ./backend/TuneSpace.Infrastructure/TuneSpace.Infrastructure.csproj --startup-project ./backend/TuneSpace.Api/TuneSpace.Api.csproj
        env:
          ConnectionStrings__DefaultConnection: ${{ secrets.DEFAULT_CONNECTION_STRING }}

      - name: Run tests
        run: dotnet test ${{ env.SOLUTION_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbosity normal
        env:
          Jwt__Secret: ${{ secrets.JWT_SECRET }}
          ConnectionStrings__DefaultConnection: ${{ secrets.DEFAULT_CONNECTION_STRING }}

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Run code analysis
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --verbosity normal

      - name: Install dotnet format
        run: dotnet tool install -g dotnet-format

      - name: Check code formatting
        run: dotnet format ${{ env.SOLUTION_PATH }} --verify-no-changes --verbosity normal

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Run security audit
        run: dotnet list ${{ env.SOLUTION_PATH }} package --vulnerable --include-transitive

  publish:
    name: Publish Application
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Publish application
        run: |
          dotnet publish ./backend/TuneSpace.Api/TuneSpace.Api.csproj \
            --configuration ${{ env.BUILD_CONFIGURATION }} \
            --output ${{ env.PUBLISH_PATH }} \
            --no-restore \
            --runtime linux-x64 \
            --self-contained false

      - name: Upload publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: ${{ env.PUBLISH_PATH }}
          retention-days: 30
